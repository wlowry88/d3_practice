<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Exercise 7</title>
    <script type="text/javascript" src="/javascript/d3.js"></script>

    <style>
    .axis path,
    .axis line {
    	fill: none;
    	stroke: black;
    	shape-rendering: crispEdges;
    }
    .axis text {
    	font-family: sans-serif;
    	font-size: 11px;
    }
    </style>
  </head>
  <body>
    <script type="text/javascript">
		
		var dataset = [];
		var numDataPoints = 50;
    var xRange = Math.random()*1000;
    var yRange = Math.random()*1000;
		var w = 600;
		var h = 300;
		var padding = 30;

		for (var i = 0; i < numDataPoints; i++) {
			var newNumber1 = Math.floor(Math.random()*xRange);
			var newNumber2 = Math.floor(Math.random()*yRange);
			dataset.push([newNumber1, newNumber2]);
		}

    var scale = d3.scale.linear();


    // d3.max(dataset, function(d) {
    // 	return d[0];
    // });

    // above, the second argument is the accessor function - shows how to access the elements

   var xScale = d3.scale.linear()
    										.domain([0, d3.max(dataset, function(d){return d[0];})])
    										.range([padding, w - padding * 2])
    										.nice();
   var yScale = d3.scale.linear()
   											.domain([0, d3.max(dataset, function(d){ return d[1];})])
   											.range([h - padding, padding]);
   var rScale = d3.scale.linear()
   											.domain([0, d3.max(dataset, function(d) { return d[1];})])
   											.range([2,8]);

   var svg = d3.select("body")
          						.append("svg")
          						.attr("width",w)
          						.attr("height",h);

          svg.selectAll("circle")
          	 .data(dataset)
          	 .enter()
          	 .append("circle")
          	 .attr({
          	 	cx: function(d) { return xScale(d[0]); }, 
          	 	cy: function(d) { return yScale(d[1]); }, 
          	 	r: function(d) { return rScale(d[1]); }
          	 });

          // svg.selectAll("text")
          //    .data(dataset)
          //    .enter()
          //    .append("text")
          //    .text(function(d){
          //    	 return d[0]+", "+d[1];
          //    })
          //    .attr({
          //    	x: function(d) { return xScale(d[0]); },
          //    	y: function(d) { return yScale(d[1]); },
          //    })
          //    .attr("font-family", "sans-serif")
          //    .attr("font-size", "11px")
          //    .attr("fill", "red")

   var xAxis = d3.svg.axis()
   									 .scale(xScale)
   									 .orient("bottom")
   									 .ticks(5);
   var yAxis = d3.svg.axis()
   									 .scale(yScale)
   									 .orient("left")
   									 .ticks(5);
   svg.append("g")
   		.attr("class", "axis")
   		.attr("transform", "translate(0," + (h-padding)+")")
   		.call(xAxis);
   svg.append("g")
   		.attr("class", "axis")
   		.attr("transform", "translate(" +padding + ",0)")
   		.call(yAxis);
    </script>
  </body>
</html>